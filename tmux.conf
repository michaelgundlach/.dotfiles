# Basics:
# Control + B is the leader key
# - c creates a window
# - 0-9, n and p switch windows
# - $ renames the session
# - , renames a window
# - | and _ create panes
# - } and { swap panes
# - : goes into command mode
# see also 
# - https://gist.github.com/MohamedAlaa/2961058
# -https://robots.thoughtbot.com/a-tmux-crash-course
#

# GENERAL SETTINGS #

# Enable mouse support for tmux >= 2.1
# (Earlier versions used `set -g mouse-mode on` and other options)
set -g mouse

# Use 256 colors
set -g default-terminal "screen-256color"

# DISPLAY INFO AND COLORS #

set -g status-left-length 50
set -g status-right "#[fg=default,bold]#(whoami)@#H "
set -g status-right-length 80

# Highlight currently-active pane
set -g pane-border-bg black
set -g pane-border-fg white
set -g window-active-style 'bg=black'
set -g pane-active-border-bg black
set -g pane-active-border-fg blue

# BINDINGS #

# reload config file with r
unbind r
bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Make splits using | and _, and make all new stuff start in current path.
# See also .bashrc CHERE_INVOKING
bind c new-window -c "#{pane_current_path}"
bind -r _ split-window -c "#{pane_current_path}"
bind -r | split-window -h -c "#{pane_current_path}"

# Move betwen panes with hjkl
# Wraps around the edge of the screen (annoyingly)
# and lets you navigate among 3 or more panes in a row (helpfully)
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
# Alternative: without the prefix; just control + thing
bind-key -n C-h select-pane -L
bind-key -n C-j select-pane -D
bind-key -n C-k select-pane -U
bind-key -n C-l select-pane -R
bind-key -T copy-mode-vi -n C-h select-pane -L
bind-key -T copy-mode-vi -n C-j select-pane -D
bind-key -T copy-mode-vi -n C-k select-pane -U
bind-key -T copy-mode-vi -n C-l select-pane -R

# COPY AND PASTE
# Prefix+[ to start copy mode
# vim keys to move, v to select, y/Enter to yank, q to quit
# For more info, run tmux list-keys -T copy-mode-vi
#
# Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "cat > /dev/clipboard"
                                         bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "cat > /dev/clipboard"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
